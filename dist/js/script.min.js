"use strict";var _dominteractions=require("./dominteractions.js"),_requests=require("./requests.js");function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _createForOfIteratorHelper(e,t){var r,n,i,o,a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(a)return n=!(r=!0),{s:function(){a=a.call(e)},n:function(){var e=a.next();return r=e.done,e},e:function(e){n=!0,i=e},f:function(){try{r||null==a.return||a.return()}finally{if(n)throw i}}};if(Array.isArray(e)||(a=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return a&&(e=a),o=0,{s:t=function(){},n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}var TvMaze=_createClass(function e(){var c=this;_classCallCheck(this,e),_defineProperty(this,"initializeApp",function(){c.connectDOMElements(),c.setupListeners(),c.fetchAndDisplayShows()}),_defineProperty(this,"connectDOMElements",function(){var e=Array.from(document.querySelectorAll("[id]")).map(function(e){return e.id}),t=Array.from(document.querySelectorAll("[data-genre]")).map(function(e){return e.dataset.genre});c.viewElems=(0,_dominteractions.mapListToDOMElements)(e,"id"),c.showNameButtons=(0,_dominteractions.mapListToDOMElements)(t,"data-genre")}),_defineProperty(this,"setupListeners",function(){var e=document.querySelector(".main-btn"),t=document.querySelector(".dropdown-menu");e.addEventListener("click",function(){t.classList.toggle("transform-class")}),t.addEventListener("click",function(){t.classList.remove("transform-class")}),Object.keys(c.showNameButtons).forEach(function(e){return c.showNameButtons[e].addEventListener("click",c.setCurrentFilterByName)}),c.showNameButtons.search.addEventListener("click",c.setCurrentFilterByInput),c.viewElems.searchInput.addEventListener("keydown",c.setCurrentFilterByInput),c.viewElems.showsWrapper.addEventListener("click",function(e){var t=e.target.children[2].dataset.showId;if(c.favorites.includes(t))for(var r=0;r<c.favorites.length;r++)c.favorites[r]===t&&(c.favorites.splice(r,1),e.target.classList.remove("fav"));else c.favorites.push(t),e.target.classList.add("fav");localStorage.setItem("favorites",JSON.stringify(c.favorites))}),c.viewElems.favButton.addEventListener("click",function(e){c.renderFavorites()})}),_defineProperty(this,"setCurrentFilterByInput",function(){"click"!==event.type&&"Enter"!==event.key||(c.selectedName=c.viewElems.searchInput.value,c.fetchAndDisplayShows(),c.viewElems.searchInput.value="")}),_defineProperty(this,"setCurrentFilterByName",function(e){c.selectedName=e.target.dataset.genre,c.fetchAndDisplayShows()}),_defineProperty(this,"fetchAndDisplayShows",function(){(0,_requests.getShowsByKey)(c.selectedName).then(function(e){return c.renderCardsOnList(e)})}),_defineProperty(this,"renderCardsOnList",function(e){Array.from(document.querySelectorAll("[data-show-id]")).forEach(function(e){return e.removeEventListener("click",c.openDetailsView)}),c.viewElems.showsWrapper.innerHTML="";var t,r=_createForOfIteratorHelper(e);try{for(r.s();!(t=r.n()).done;){var n=t.value.show,i=c.createShowCard(n);c.viewElems.showsWrapper.append(i)}}catch(e){r.e(e)}finally{r.f()}}),_defineProperty(this,"renderFavorites",function(e){c.viewElems.showsWrapper.innerHTML="",c.favorites.forEach(function(e){(0,_requests.getShowById)(e).then(function(e){e=c.createShowCard(e,!1);e.classList.add("fav"),c.viewElems.showsWrapper.append(e)})})}),_defineProperty(this,"openDetailsView",function(e){e=e.target.dataset.showId;(0,_requests.getShowById)(e).then(function(e){var t=0<(t=e.genres).length?"Genre: "+t.join(", "):"Genre: Unknown",r=e.runtime?"Runtime: "+e.runtime+"min":"Runtime: Unknown",n=(e.premiered?a="Premiered: "+e.premiered:(a="Premiered: Unknown",n="Ended: Unknown"),e.ended?"Ended: "+e.ended:"Ended: -"),i=(0,_dominteractions.createDOMElem)("div","info-div"),r=(0,_dominteractions.createDOMElem)("p","info",r),t=(0,_dominteractions.createDOMElem)("p","info",t),o=(0,_dominteractions.createDOMElem)("p","info","Language: "+e.language),a=(0,_dominteractions.createDOMElem)("p","info",a),n=(0,_dominteractions.createDOMElem)("p","info",n),r=(i.append(r,t,o,a,n),c.createShowCard(e,!0));r.insertBefore(i,r.children[2]),r.classList.add("no-before"),c.viewElems.showPreview.append(r),c.viewElems.showPreview.style.display="block",document.body.style.overflow="hidden",document.querySelector(".overlay").style.display="block"})}),_defineProperty(this,"closeDetailsView",function(e){e=e.target.dataset.showId;document.querySelector('[id="showPreview"] [data-show-id="'.concat(e,'"]')).removeEventListener("click",c.closeDetailsView),c.viewElems.showPreview.style.display="none",c.viewElems.showPreview.innerHTML="",document.body.style.overflow="",document.querySelector(".overlay").style.display="none"}),_defineProperty(this,"createShowCard",function(e,t){var r,n,i=(0,_dominteractions.createDOMElem)("div","card"),o=(0,_dominteractions.createDOMElem)("div","card-text"),a=(0,_dominteractions.createDOMElem)("h5","card-title",e.name),s=(0,_dominteractions.createDOMElem)("button","drop-btn card-btn","Show");return n=e.summary?(n=e.summary.replace(/<\/?[^>]+(>|$)/g,""),t?(0,_dominteractions.createDOMElem)("p",null,n):(0,_dominteractions.createDOMElem)("p",null,"".concat(n.slice(0,200),"..."))):(0,_dominteractions.createDOMElem)("p",null,"There is no description available."),e.image?t?(r=(0,_dominteractions.createDOMElem)("div","card-preview-bg")).style.backgroundImage="url('".concat(e.image.original,"')"):r=(0,_dominteractions.createDOMElem)("img","card-img",null,e.image.medium):r=(0,_dominteractions.createDOMElem)("img","card-img",null,"https://via.placeholder.com/210x295"),s.dataset.showId=e.id,t?(s.addEventListener("click",c.closeDetailsView),s.textContent="Close"):s.addEventListener("click",c.openDetailsView),i.append(r,o,s),o.append(a,n),i}),this.viewElems={},this.showNameButtons={},this.selectedName="",this.initializeApp(),this.favorites=JSON.parse(localStorage.getItem("favorites"))||[]});document.addEventListener("DOMContentLoaded",new TvMaze);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
